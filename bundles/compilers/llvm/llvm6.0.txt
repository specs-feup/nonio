    -aa                                             - Function Alias Analysis Results
    -aa-eval                                        - Exhaustive Alias Analysis Precision Evaluator
    -aarch64-a57-fp-load-balancing                  - AArch64 A57 FP Load-Balancing
    -aarch64-ccmp                                   - AArch64 CCMP Pass
    -aarch64-collect-loh                            - AArch64 Collect Linker Optimization Hint (LOH)
    -aarch64-condopt                                - AArch64 CondOpt Pass
    -aarch64-copyelim                               - AArch64 redundant copy elimination pass
    -aarch64-dead-defs                              - AArch64 Dead register definitions
    -aarch64-expand-pseudo                          - AArch64 pseudo instruction expansion pass
    -aarch64-fix-cortex-a53-835769-pass             - AArch64 fix for A53 erratum 835769
    -aarch64-ldst-opt                               - AArch64 load / store optimization pass
    -aarch64-local-dynamic-tls-cleanup              - AArch64 Local Dynamic TLS Access Clean-up
    -aarch64-promote-const                          - AArch64 Promote Constant Pass
    -aarch64-simd-scalar                            - AdvSIMD Scalar Operation Optimization
    -aarch64-simdinstr-opt                          - AArch64 SIMD instructions optimization pass
    -aarch64-stp-suppress                           - AArch64 Store Pair Suppression
    -adce                                           - Aggressive Dead Code Elimination
    -add-discriminators                             - Add DWARF path discriminators
    -alignment-from-assumptions                     - Alignment from assumptions
    -alloca-hoisting                                - Hoisting alloca instructions in non-entry blocks to the entry block
    -always-inline                                  - Inliner for always_inline functions
    -amdgpu-aa                                      - AMDGPU Address space based Alias Analysis
    -amdgpu-always-inline                           - AMDGPU Inline All Functions
    -amdgpu-annotate-kernel-features                - Add AMDGPU function attributes
    -amdgpu-annotate-uniform                        - Add AMDGPU uniform metadata
    -amdgpu-argument-reg-usage-info                 - Argument Register Usage Information Storage
    -amdgpu-codegenprepare                          - AMDGPU IR optimizations
    -amdgpu-inline                                  - AMDGPU Function Integration/Inlining
    -amdgpu-lower-enqueued-block                    - Lower OpenCL enqueued blocks
    -amdgpu-lower-intrinsics                        - Lower intrinsics
    -amdgpu-promote-alloca                          - AMDGPU promote alloca to vector or LDS
    -amdgpu-rewrite-out-arguments                   - AMDGPU Rewrite Out Arguments
    -amdgpu-simplifylib                             - Simplify well-known AMD library calls
    -amdgpu-unify-divergent-exit-nodes              - Unify divergent function exit nodes
    -amdgpu-unify-metadata                          - Unify multiple OpenCL metadata due to linking
    -amdgpu-usenative                               - Replace builtin math calls with that native versions.
    -amode-opt                                      - Optimize addressing mode
    -argpromotion                                   - Promote 'by reference' arguments to scalars
    -arm-cp-islands                                 - ARM constant island placement and branch shortening pass
    -arm-execution-deps-fix                         - ARM Execution Dependency Fix
    -arm-ldst-opt                                   - ARM load / store optimization pass
    -arm-prera-ldst-opt                             - ARM pre- register allocation load / store optimization pass
    -arm-pseudo                                     - ARM pseudo instruction expansion pass
    -asan                                           - AddressSanitizer: detects use-after-free and out-of-bounds bugs.
    -asan-module                                    - AddressSanitizer: detects use-after-free and out-of-bounds bugs.ModulePass
    -assumption-cache-tracker                       - Assumption Cache Tracker
    -atomic-expand                                  - Expand Atomic instructions
    -barrier                                        - A No-Op Barrier Pass
    -basicaa                                        - Basic Alias Analysis (stateless AA impl)
    -basiccg                                        - CallGraph Construction
    -bdce                                           - Bit-Tracking Dead Code Elimination
    -block-freq                                     - Block Frequency Analysis
    -bool-ret-to-int                                - Convert i1 constants to i32/i64 if they are returned
    -bounds-checking                                - Run-time bounds checking
    -branch-prob                                    - Branch Probability Analysis
    -break-crit-edges                               - Break critical edges in CFG
    -called-value-propagation                       - Called Value Propagation
    -callsite-splitting                             - Call-site splitting
    -cfl-anders-aa                                  - Inclusion-Based CFL Alias Analysis
    -cfl-steens-aa                                  - Unification-Based CFL Alias Analysis
    -check-debugify                                 - Check debug info from -debugify
    -codegenprepare                                 - Optimize for code generation
    -consthoist                                     - Constant Hoisting
    -constmerge                                     - Merge Duplicate Global Constants
    -constprop                                      - Simple constant propagation
    -coro-cleanup                                   - Lower all coroutine related intrinsics
    -coro-early                                     - Lower early coroutine intrinsics
    -coro-elide                                     - Coroutine frame allocation elision and indirect calls replacement
    -coro-split                                     - Split coroutine into a set of functions driving its state machine
    -correlated-propagation                         - Value Propagation
    -cost-model                                     - Cost Model Analysis
    -cross-dso-cfi                                  - Cross-DSO CFI
    -da                                             - Dependence Analysis
    -dce                                            - Dead Code Elimination
    -deadargelim                                    - Dead Argument Elimination
    -deadarghaX0r                                   - Dead Argument Hacking (BUGPOINT USE ONLY; DO NOT USE)
    -debugify                                       - Attach debug info to everything
    -delinearize                                    - Delinearization
    -demanded-bits                                  - Demanded bits analysis
    -dfsan                                          - DataFlowSanitizer: dynamic data flow analysis.
    -die                                            - Dead Instruction Elimination
    -div-rem-pairs                                  - Hoist/decompose integer division and remainder
    -divergence                                     - Divergence Analysis
    -domfrontier                                    - Dominance Frontier Construction
    -domtree                                        - Dominator Tree Construction
    -dot-callgraph                                  - Print call graph to 'dot' file
    -dot-cfg                                        - Print CFG of function to 'dot' file
    -dot-cfg-only                                   - Print CFG of function to 'dot' file (with no function bodies)
    -dot-dom                                        - Print dominance tree of function to 'dot' file
    -dot-dom-only                                   - Print dominance tree of function to 'dot' file (with no function bodies)
    -dot-postdom                                    - Print postdominance tree of function to 'dot' file
    -dot-postdom-only                               - Print postdominance tree of function to 'dot' file (with no function bodies)
    -dot-regions                                    - Print regions of function to 'dot' file
    -dot-regions-only                               - Print regions of function to 'dot' file (with no function bodies)
    -dot-scops                                      - Polly - Print Scops of function
    -dot-scops-only                                 - Polly - Print Scops of function (with no function bodies)
    -dse                                            - Dead Store Elimination
    -dwarfehprepare                                 - Prepare DWARF exceptions
    -early-cse                                      - Early CSE
    -early-cse-memssa                               - Early CSE w/ MemorySSA
    -ee-instrument                                  - Instrument function entry/exit with calls to e.g. mcount() (pre inlining)
    -elim-avail-extern                              - Eliminate Available Externally Globals
    -esan                                           - EfficiencySanitizer: finds performance issues.
    -expand-reductions                              - Expand reduction intrinsics
    -expandmemcmp                                   - Expand memcmp() to load/stores
    -external-aa                                    - External Alias Analysis
    -extract-blocks                                 - Extract Basic Blocks From Module (for bugpoint use)
    -falkor-hwpf-fix                                - Falkor HW Prefetch Fix
    -falkor-hwpf-fix-late                           - Falkor HW Prefetch Fix Late Phase
    -flattencfg                                     - Flatten the CFG
    -float2int                                      - Float to int
    -forceattrs                                     - Force set function attributes
    -function-import                                - Summary Based Function Import
    -functionattrs                                  - Deduce function attributes
    -generic-to-nvvm                                - Ensure that the global variables are in the global address space
    -global-merge                                   - Merge global variables
    -globaldce                                      - Dead Global Elimination
    -globalopt                                      - Global Variable Optimizer
    -globals-aa                                     - Globals Alias Analysis
    -globalsplit                                    - Global splitter
    -guard-widening                                 - Widen guards
    -gvn                                            - Global Value Numbering
    -gvn-hoist                                      - Early GVN Hoisting of Expressions
    -gvn-sink                                       - Early GVN sinking of Expressions
    -hexagon-cext-opt                               - Hexagon constant-extender optimization
    -hexagon-early-if                               - Hexagon early if conversion
    -hexagon-gen-mux                                - Hexagon generate mux instructions
    -hexagon-loop-idiom                             - Recognize Hexagon-specific loop idioms
    -hexagon-nvj                                    - Hexagon NewValueJump
    -hexagon-packetizer                             - Hexagon Packetizer
    -hexagon-rdf-opt                                - Hexagon RDF optimizations
    -hexagon-vlcr                                   - Hexagon-specific predictive commoning for HVX vectors
    -hwasan                                         - HWAddressSanitizer: detect memory bugs using tagged addressing.
    -hwloops                                        - Hexagon Hardware Loops
    -indirectbr-expand                              - Expand indirectbr instructions
    -indvars                                        - Induction Variable Simplification
    -infer-address-spaces                           - Infer address spaces
    -inferattrs                                     - Infer set function attributes
    -inline                                         - Function Integration/Inlining
    -insert-gcov-profiling                          - Insert instrumentation for GCOV profiling
    -instcombine                                    - Combine redundant instructions
    -instcount                                      - Counts the various types of Instructions
    -instnamer                                      - Assign names to anonymous instructions
    -instrprof                                      - Frontend instrumentation-based coverage lowering.
    -instruction-select                             - Select target instructions out of generic instructions
    -instsimplify                                   - Remove redundant instructions
    -interleaved-access                             - Lower interleaved memory accesses to target specific intrinsics
    -internalize                                    - Internalize Global Symbols
    -intervals                                      - Interval Partition Construction
    -ipconstprop                                    - Interprocedural constant propagation
    -ipsccp                                         - Interprocedural Sparse Conditional Constant Propagation
    -irce                                           - Inductive range check elimination
    -irtranslator                                   - IRTranslator LLVM IR -> MI
    -isel                                           - AMDGPU DAG->DAG Pattern Instruction Selection
    -iv-users                                       - Induction Variable Users
    -jump-threading                                 - Jump Threading
    -lazy-block-freq                                - Lazy Block Frequency Analysis
    -lazy-branch-prob                               - Lazy Branch Probability Analysis
    -lazy-value-info                                - Lazy Value Information Analysis
    -lcssa                                          - Loop-Closed SSA Form Pass
    -lcssa-verification                             - LCSSA Verifier
    -legalizer                                      - Legalize the Machine IR a function's Machine IR
    -libcalls-shrinkwrap                            - Conditionally eliminate dead library calls
    -licm                                           - Loop Invariant Code Motion
    -lint                                           - Statically lint-checks LLVM IR
    -liveintervals                                  - Live Interval Analysis
    -load-store-vectorizer                          - Vectorize load and store instructions
    -localizer                                      - Move/duplicate certain instructions close to their use
    -loop-accesses                                  - Loop Access Analysis
    -loop-data-prefetch                             - Loop Data Prefetch
    -loop-deletion                                  - Delete dead loops
    -loop-distribute                                - Loop Distribution
    -loop-extract                                   - Extract loops into new functions
    -loop-extract-single                            - Extract at most one loop into a new function
    -loop-idiom                                     - Recognize loop idioms
    -loop-instsimplify                              - Simplify instructions in loops
    -loop-interchange                               - Interchanges loops for cache reuse
    -loop-load-elim                                 - Loop Load Elimination
    -loop-predication                               - Loop predication
    -loop-reduce                                    - Loop Strength Reduction
    -loop-reroll                                    - Reroll loops
    -loop-rotate                                    - Rotate Loops
    -loop-simplify                                  - Canonicalize natural loops
    -loop-simplifycfg                               - Simplify loop CFG
    -loop-sink                                      - Loop Sink
    -loop-unroll                                    - Unroll loops
    -loop-unswitch                                  - Unswitch loops
    -loop-vectorize                                 - Loop Vectorization
    -loop-versioning                                - Loop Versioning
    -loop-versioning-licm                           - Loop Versioning For LICM
    -loops                                          - Natural Loop Information
    -lower-expect                                   - Lower 'expect' Intrinsics
    -lower-guard-intrinsic                          - Lower the guard intrinsic to normal control flow
    -loweratomic                                    - Lower atomic intrinsics to non-atomic form
    -lowerinvoke                                    - Lower invoke and unwind, for unwindless code generators
    -lowerswitch                                    - Lower SwitchInst's to branches
    -lowertypetests                                 - Lower type metadata
    -machine-block-freq                             - Machine Block Frequency Analysis
    -machine-branch-prob                            - Machine Branch Probability Analysis
    -machine-domfrontier                            - Machine Dominance Frontier Construction
    -machine-loops                                  - Machine Natural Loop Construction
    -machine-trace-metrics                          - Machine Trace Metrics
    -machinedomtree                                 - MachineDominator Tree Construction
    -mem2reg                                        - Promote Memory to Register
    -memcpyopt                                      - MemCpy Optimization
    -memdep                                         - Memory Dependence Analysis
    -memoryssa                                      - Memory SSA
    -mergefunc                                      - Merge Functions
    -mergeicmps                                     - Merge contiguous icmps into a memcmp
    -mergereturn                                    - Unify function exit nodes
    -metarenamer                                    - Assign new names to everything
    -mldst-motion                                   - MergedLoadStoreMotion
    -module-debuginfo                               - Decodes module-level debug info
    -module-summary-analysis                        - Module Summary Analysis
    -msan                                           - MemorySanitizer: detects uninitialized reads.
    -name-anon-globals                              - Provide a name to nameless globals
    -nary-reassociate                               - Nary reassociation
    -newgvn                                         - Global Value Numbering
    -nvptx-assign-valid-global-names                - Assign valid PTX names to globals
    -nvptx-lower-aggr-copies                        - Lower aggregate copies, and llvm.mem* intrinsics into loops
    -nvptx-lower-alloca                             - Lower Alloca
    -nvptx-lower-args                               - Lower arguments (NVPTX)
    -nvvm-intr-range                                - Add !range metadata to NVVM intrinsics.
    -nvvm-reflect                                   - Replace occurrences of __nvvm_reflect() calls with 0/1
    -objc-arc                                       - ObjC ARC optimization
    -objc-arc-aa                                    - ObjC-ARC-Based Alias Analysis
    -objc-arc-apelim                                - ObjC ARC autorelease pool elimination
    -objc-arc-contract                              - ObjC ARC contraction
    -objc-arc-expand                                - ObjC ARC expansion
    -opt-remark-emitter                             - Optimization Remark Emitter
    -pa-eval                                        - Evaluate ProvenanceAnalysis on all pairs
    -packets                                        - R600 Packetizer
    -partial-inliner                                - Partial Inliner
    -partially-inline-libcalls                      - Partially inline calls to library functions
    -pgo-icall-prom                                 - Use PGO instrumentation profile to promote indirect calls to direct calls.
    -pgo-instr-gen                                  - PGO instrumentation.
    -pgo-instr-use                                  - Read PGO instrumentation profile.
    -pgo-memop-opt                                  - Optimize memory intrinsic using its size value profile
    -place-backedge-safepoints-impl                 - Place Backedge Safepoints
    -place-safepoints                               - Place Safepoints
    -polly-ast                                      - Polly - Generate an AST from the SCoP (isl)
    -polly-canonicalize                             - Polly - Run canonicalization passes
    -polly-cleanup                                  - Polly - Cleanup after code generation
    -polly-codegen                                  - Polly - Create LLVM-IR from SCoPs
    -polly-dce                                      - Polly - Remove dead iterations
    -polly-delicm                                   - Polly - DeLICM/DePRE
    -polly-dependences                              - Polly - Calculate dependences
    -polly-detect                                   - Polly - Detect static control parts (SCoPs)
    -polly-dump-module                              - Polly - Dump Module
    -polly-export-jscop                             - Polly - Export Scops as JSON (Writes a .jscop file for each Scop)
    -polly-flatten-schedule                         - Polly - Flatten schedule
    -polly-function-dependences                     - Polly - Calculate dependences for all the SCoPs of a function
    -polly-function-scops                           - Polly - Create polyhedral description of all Scops of a function
    -polly-import-jscop                             - Polly - Import Scops from JSON (Reads a .jscop file for each Scop)
    -polly-mse                                      - Polly - Maximal static expansion of SCoP
    -polly-opt-isl                                  - Polly - Optimize schedule of SCoP
    -polly-optree                                   - Polly - Forward operand tree
    -polly-prepare                                  - Polly - Prepare code for polly
    -polly-prune-unprofitable                       - Polly - Prune unprofitable SCoPs
    -polly-rewrite-byref-params                     - Polly - Rewrite by reference parameters
    -polly-scop-inliner                             - inline functions based on how much of the function is a scop.
    -polly-scops                                    - Polly - Create polyhedral description of Scops
    -polly-simplify                                 - Polly - Simplify
    -polyhedral-info                                - Polly - Interface to polyhedral analysis engine
    -post-inline-ee-instrument                      - Instrument function entry/exit with calls to e.g. mcount() (post inlining)
    -postdomtree                                    - Post-Dominator Tree Construction
    -ppc-expand-isel                                - PowerPC Expand ISEL Generation
    -ppc-mi-peepholes                               - PowerPC MI Peephole Optimization
    -ppc-pre-emit-peephole                          - PowerPC Pre-Emit Peephole
    -ppc-tls-dynamic-call                           - PowerPC TLS Dynamic Call Fixup
    -pre-isel-intrinsic-lowering                    - Pre-ISel Intrinsic Lowering
    -print-alias-sets                               - Alias Set Printer
    -print-bb                                       - Print BB to stderr
    -print-callgraph                                - Print a call graph
    -print-callgraph-sccs                           - Print SCCs of the Call Graph
    -print-cfg-sccs                                 - Print SCCs of each function CFG
    -print-dom-info                                 - Dominator Info Printer
    -print-externalfnconstants                      - Print external fn callsites passed constants
    -print-function                                 - Print function to stderr
    -print-lazy-value-info                          - Lazy Value Info Printer Pass
    -print-memdeps                                  - Print MemDeps of function
    -print-memderefs                                - Memory Dereferenciblity of pointers in function
    -print-memoryssa                                - Memory SSA Printer
    -print-module                                   - Print module to stderr
    -print-predicateinfo                            - PredicateInfo Printer
    -profile-summary-info                           - Profile summary info
    -prune-eh                                       - Remove unused exception handling info
    -r600-expand-special-instrs                     - R600ExpandSpecialInstrs
    -r600cf                                         - R600 Control Flow Finalizer
    -r600mergeclause                                - R600 Clause Merge
    -reassociate                                    - Reassociate expressions
    -reg2mem                                        - Demote all values to stack slots
    -regbankselect                                  - Assign register bank of generic virtual registers
    -regions                                        - Detect single entry single exit regions
    -rewrite-statepoints-for-gc                     - Make relocations explicit at statepoints
    -rewrite-symbols                                - Rewrite Symbols
    -rpo-functionattrs                              - Deduce function attributes in RPO
    -safe-stack                                     - Safe Stack instrumentation pass
    -sample-profile                                 - Sample Profile loader
    -sancov                                         - SanitizerCoverage: TODO.ModulePass
    -scalar-evolution                               - Scalar Evolution Analysis
    -scalarize-masked-mem-intrin                    - Scalarize unsupported masked memory intrinsics
    -scalarizer                                     - Scalarize vector operations
    -sccp                                           - Sparse Conditional Constant Propagation
    -scev-aa                                        - ScalarEvolution-based Alias Analysis
    -scoped-noalias                                 - Scoped NoAlias Alias Analysis
    -separate-const-offset-from-gep                 - Split GEPs to a variadic base and a constant offset for better CSE
    -si-annotate-control-flow                       - Annotate SI Control Flow
    -si-debugger-insert-nops                        - SI Debugger Insert Nops
    -si-fix-sgpr-copies                             - SI Fix SGPR copies
    -si-fix-vgpr-copies                             - SI Fix VGPR copies
    -si-fix-wwm-liveness                            - SI fix WWM liveness
    -si-fold-operands                               - SI Fold Operands
    -si-i1-copies                                   - SI Lower i1 Copies
    -si-insert-skips                                - SI insert s_cbranch_execz instructions
    -si-insert-waitcnts                             - SI Insert Waitcnts
    -si-insert-waits                                - SI Insert Waits
    -si-load-store-opt                              - SI Load / Store Optimizer
    -si-lower-control-flow                          - SI lower control flow
    -si-memory-legalizer                            - SI Memory Legalizer
    -si-optimize-exec-masking                       - SI optimize exec mask operations
    -si-optimize-exec-masking-pre-ra                - SI optimize exec mask operations pre-RA
    -si-peephole-sdwa                               - SI Peephole SDWA
    -si-shrink-instructions                         - SI Shrink Instructions
    -si-wqm                                         - SI Whole Quad Mode
    -simple-loop-unswitch                           - Simple unswitch loops
    -simplifycfg                                    - Simplify the CFG
    -sink                                           - Code sinking
    -sjljehprepare                                  - Prepare SjLj exceptions
    -slotindexes                                    - Slot index numbering
    -slp-vectorizer                                 - SLP Vectorizer
    -slsr                                           - Straight line strength reduction
    -speculative-execution                          - Speculatively execute instructions
    -sroa                                           - Scalar Replacement Of Aggregates
    -strip                                          - Strip all symbols from a module
    -strip-dead-debug-info                          - Strip debug info for unused symbols
    -strip-dead-prototypes                          - Strip Unused Function Prototypes
    -strip-debug-declare                            - Strip all llvm.dbg.declare intrinsics
    -strip-gc-relocates                             - Strip gc.relocates inserted through RewriteStatepointsForGC
    -strip-nondebug                                 - Strip all symbols, except dbg symbols, from a module
    -strip-nonlinetable-debuginfo                   - Strip all debug info except linetables
    -structurizecfg                                 - Structurize the CFG
    -t2-reduce-size                                 - Thumb2 instruction size reduce pass
    -tailcallelim                                   - Tail Call Elimination
    -targetlibinfo                                  - Target Library Information
    -targetpassconfig                               - Target Pass Configuration
    -tbaa                                           - Type-Based Alias Analysis
    -tsan                                           - ThreadSanitizer: detects data races.
    -tti                                            - Target Transform Information
    -unreachableblockelim                           - Remove unreachable blocks from the CFG
    -vec-merger                                     - R600 Vector Reg Merger
    -verify                                         - Module Verifier
    -verify-safepoint-ir                            - Safepoint IR Verifier
    -view-callgraph                                 - View call graph
    -view-cfg                                       - View CFG of function
    -view-cfg-only                                  - View CFG of function (with no function bodies)
    -view-dom                                       - View dominance tree of function
    -view-dom-only                                  - View dominance tree of function (with no function bodies)
    -view-postdom                                   - View postdominance tree of function
    -view-postdom-only                              - View postdominance tree of function (with no function bodies)
    -view-regions                                   - View regions of function
    -view-regions-only                              - View regions of function (with no function bodies)
    -view-scops                                     - Polly - View Scops of function
    -view-scops-only                                - Polly - View Scops of function (with no function bodies)
    -wholeprogramdevirt                             - Whole program devirtualization
    -winehprepare                                   - Prepare Windows exceptions
    -write-bitcode                                  - Write Bitcode
    -x86-cf-opt                                     - X86 Call Frame Optimization
    -x86-cmov-conversion                            - X86 cmov Conversion
    -x86-domain-reassignment                        - X86 Domain Reassignment Pass
    -x86-evex-to-vex-compress                       - Compressing EVEX instrs to VEX encoding when possible
    -x86-execution-deps-fix                         - X86 Execution Dependency Fix
    -x86-fixup-LEAs                                 - X86 LEA Fixup
    -x86-fixup-bw-insts                             - X86 Byte/Word Instruction Fixup
    -x86-winehstate                                 - Insert stores for EH state numbers

