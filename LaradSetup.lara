import lara.Io;

/**
 * Global object that stores information.
 * @class
 */
var LaradSetup = {};


LaradSetup.isAspectVersion = false;
/**
 * Set to true in case validation is performed on a separated main (e.g., '_verify.c'). TODO: think of what is the best for a user.
 */
LaradSetup.isVerificationSeparated = false;
LaradSetup.defaultTimelimit = 15;	// 10 seconds	// had to increase from 10 because of initial setup overhead for fusesoc
LaradSetup.defaultTimeUnit = "SECONDS";	
LaradSetup.isPhaseSelectionOnly = false;

LaradSetup.specialLinker = undefined;	// used by some targets if the default compiler linker is not able to link for some targets (e.g., Clang does not link well for OpenRisc)
LaradSetup.specialAssembler = undefined;

LaradSetup.laradFolder = undefined;
LaradSetup.checkGeneratedFiles = true;	// check files generated by compilation?

LaradSetup.compilerPrefix = "";	// e.g., 'or1k-elf-' for using GCC binary named 'or1k-elf-gcc'

LaradSetup.language = undefined;

// An array of the names of metrics to evaluate
LaradSetup.metrics = undefined;

// If true, stores the results of the several flag sequences in JSON format
LaradSetup.storeResults = false;

LaradSetup.getLaradFolder = function() {
	checkDefined(LaradSetup.laradFolder, "LaradSetup.laradFolder");	
	return Io.getPath(LaradSetup.laradFolder).getAbsolutePath();
}

// Set this variable if you want to set a specific version of the compiler
// this now set by command line

// WINDOWS
//LaradSetup.compilerFolder = "C:\\msys64\\mingw64\\bin";

// LINUX
//LaradSetup.compilerFolder = "/opt/clang+llvm-3.7.1-x86_64-linux-gnu-ubuntu-15.10/bin";
//LaradSetup.compilerFolder = "/opt/gcc-5.4.0/bin"

/**
 * Returns the folder set by the user for the compiler.
 */
LaradSetup.getCompilerFolder = function() {

	if(LaradSetup.compilerFolder === undefined) {
		return undefined;
	}
	
	return LaradSetup.compilerFolder;
}

LaradSetup.getCompilerPrefix = function() {
	return LaradSetup.compilerPrefix;
}

LaradSetup.getLanguage = function() {
	return LaradSetup.language;
}

LaradSetup.getExeName = function(baseName) {

	var exeName = baseName;
	if(!Platforms.isWindows()) {
		exeName = "./" + exeName;	
	}
/*	
	if(Platforms.isWindows()) {
		exeName = exeName + ".exe";
	}
	else {
		exeName = "./" + exeName;
	}
*/	
	return exeName;
}

